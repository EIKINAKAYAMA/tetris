{"version":3,"sources":["i18n.js","Paypal.js","Tetris.js","index.js"],"names":["resources","en","translation","enTranslation","ja","jaTranslation","i18n","use","initReactI18next","init","lng","fallbackLng","debug","interpolation","escapeValue","react","wait","PayPalButton","window","paypal","Buttons","driver","React","ReactDOM","Paypal","props","state","text","data","actions","order","create","purchase_units","amount","value","this","capture","t","className","id","htmlFor","type","name","placeholder","onChange","e","setState","target","createOrder","onApprove","Component","withTranslation","x","middleX","Math","floor","blocktemplate","thisFigures","figures","color","angle","rotatedFigures","Panel","score","level","message","judge","TetrisInformationPanel","Square","Table","i","table","Array","fill","tbody","templateblocks","filter","f","row","j","num","includes","push","renderSquare","Board","board","Tetris","currentBlock","nextBlock","cleateblock","histories","language","initialState","onkeydown","key","moveLeft","rotate","moveRight","fallblock","history","length","slice","rotatedAngle","find","map","m","filteredBottomFigure","figure","JudgeBottomFigure","indexOf","fromMouse","needFix","minY","min","maxY","max","fixblock","deleteLine","boardcopy","forEach","concat","copyboard","LineConter","splice","current","copyhistories","some","random","getRandomBlock","timeId","time","clearTimeout","setTimeout","mainloop","bind","delete","changeInfo","navigator","changeLanguage","checkLanguage","startGame","onClick","onMouseDown","resetGame","ga4react","GA4React","a","initialize","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d1dabf04.chunk.js","sourcesContent":["import i18n from 'i18next'\nimport enTranslation from './locales/en.json'\nimport jaTranslation from './locales/ja.json'\nimport { initReactI18next } from 'react-i18next'\n\nconst resources = {\n  en: {\n    translation: enTranslation\n  },\n  ja: {\n    translation: jaTranslation\n  }\n}\n\ni18n.use(initReactI18next)\n  .init({\n    lng: 'en',\n    fallbackLng: 'en',\n    debug: true,\n    interpolation: { escapeValue: false },\n    react: { wait: true },\n    resources: resources\n  })\n\nexport default i18n\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './i18n'\nimport { withTranslation } from 'react-i18next'\n\nconst PayPalButton = window.paypal.Buttons.driver('react', { React, ReactDOM })\n\nclass Paypal extends React.Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      text: ''\n    }\n  }\n\n  createOrder (data, actions) {\n    return actions.order.create({\n      purchase_units: [\n        {\n          amount: {\n            value: this.state.text\n          }\n        }\n      ]\n    })\n  }\n\n  onApprove (data, actions) {\n    return actions.order.capture()\n  }\n\n  render () {\n    const { t } = this.props\n    return (\n      <div className='Paypal'>\n        <p id='donate'>{t('ナカヤマンを餌付けする')}</p>\n        <div id='priceField'>\n          <label htmlFor='price'>{t('餌付(ドル)')}</label><br />\n          <input\n            type='number' name='price' id='price' value={this.state.text} placeholder={t('金額を入力する')}\n            onChange={(e) => this.setState({ text: e.target.value })}\n          />\n        </div>\n        <PayPalButton\n          createOrder={(data, actions) => this.createOrder(data, actions)}\n          onApprove={(data, actions) => this.onApprove(data, actions)}\n        />\n      </div>\n    )\n  }\n}\n\nexport default withTranslation()(Paypal)\n","import React from 'react'\nimport Paypal from './Paypal.js'\nimport './i18n'\nimport { withTranslation } from 'react-i18next'\n\nconst x = 12 // x=（実際に表示させたい数）＋２（左右の隠し分）\nconst y = 22 // y=（実際に表示させたい数）＋２（最上位列の隠し分）\nconst maxNum = x * y\nconst middleX = Math.floor(x / 2)\n\n// テトリミノの設定用関数\nfunction blocktemplate (middleX, x, thisFigures) {\n  const blocks =\n  [\n    {\n      figures: [middleX - 2, middleX - 1, middleX, middleX + 1],\n      color: 'lightblue',\n      angle: 0,\n      rotatedFigures: [\n        [thisFigures[0] - 2 * x + 2, thisFigures[1] - x + 1, thisFigures[2], thisFigures[3] + x - 1],\n        [thisFigures[0] + 2 * x - 2, thisFigures[1] + x - 1, thisFigures[2], thisFigures[3] - x + 1]\n      ]\n    },\n    {\n      figures: [middleX - 1, middleX, middleX + x - 1, middleX + x],\n      color: 'yellow',\n      angle: 0\n      // 正方形の為、回転しない\n    },\n    {\n      figures: [middleX, middleX + 1, middleX - 1 + x, middleX + x],\n      color: 'green',\n      angle: 0,\n      rotatedFigures: [\n        [thisFigures[0] + x, thisFigures[1] + 2 * x - 1, thisFigures[2] - x, thisFigures[3] - 1],\n        [thisFigures[0] - x, thisFigures[1] - 2 * x + 1, thisFigures[2] + x, thisFigures[3] + 1]\n      ]\n    },\n    {\n      figures: [middleX - 1, middleX, middleX + x, middleX + x + 1],\n      color: 'red',\n      angle: 0,\n      rotatedFigures: [\n        [thisFigures[0] + 2, thisFigures[1] + x + 1, thisFigures[2], thisFigures[3] + x - 1],\n        [thisFigures[0] - 2, thisFigures[1] - x - 1, thisFigures[2], thisFigures[3] - x + 1]\n      ]\n    },\n    {\n      figures: [middleX - 1, middleX + x - 1, middleX + x, middleX + x + 1],\n      color: 'blue',\n      angle: 0,\n      rotatedFigures: [\n        [thisFigures[0] + 2, thisFigures[1] - x + 1, thisFigures[2], thisFigures[3] + x - 1],\n        [thisFigures[0] + 2 * x, thisFigures[1] + x + 1, thisFigures[2], thisFigures[3] - x - 1],\n        [thisFigures[0] - 2, thisFigures[1] + x - 1, thisFigures[2], thisFigures[3] - x + 1],\n        [thisFigures[0] - 2 * x, thisFigures[1] - x - 1, thisFigures[2], thisFigures[3] + x + 1]\n      ]\n    },\n    {\n      figures: [middleX + 1, middleX + x - 1, middleX + x, middleX + x + 1],\n      color: 'orange',\n      angle: 0,\n      rotatedFigures: [\n        [thisFigures[0] + 2 * x, thisFigures[1] - x + 1, thisFigures[2], thisFigures[3] + x - 1],\n        [thisFigures[0] - 2, thisFigures[1] + x + 1, thisFigures[2], thisFigures[3] - x - 1],\n        [thisFigures[0] - 2 * x, thisFigures[1] + x - 1, thisFigures[2], thisFigures[3] - x + 1],\n        [thisFigures[0] + 2, thisFigures[1] - x - 1, thisFigures[2], thisFigures[3] + x + 1]\n      ]\n    },\n    {\n      figures: [middleX, middleX + x - 1, middleX + x, middleX + x + 1],\n      color: 'purple',\n      angle: 0,\n      rotatedFigures: [\n        [thisFigures[0] + x + 1, thisFigures[1] - x + 1, thisFigures[2], thisFigures[3] + x - 1],\n        [thisFigures[0] + x - 1, thisFigures[1] + x + 1, thisFigures[2], thisFigures[3] - x - 1],\n        [thisFigures[0] - x - 1, thisFigures[1] + x - 1, thisFigures[2], thisFigures[3] - x + 1],\n        [thisFigures[0] - x + 1, thisFigures[1] - x - 1, thisFigures[2], thisFigures[3] + x + 1]\n      ]\n    }\n  ]\n  return blocks\n  // const blocks = blocks_without_angle.map(f => {f.angle = 0 return f})\n  // const blocks = blocks_without_angle.map(f =>  ({...f , angle : 0}))\n}\n\nclass Panel extends React.Component {\n  render () {\n    const { t } = this.props\n\n    return (\n      <div>\n        <p>{t('スコア')}&nbsp;&nbsp;:&nbsp;&nbsp;{this.props.score}</p>\n        <p>{t('レベル')}&nbsp;&nbsp;:&nbsp;&nbsp;{this.props.level}</p>\n        <br />\n        <p>{t('ナカヤマン')}：<br />{this.props.message}</p>\n        <br />\n        <p>{t('勝利判定')}：{this.props.judge}</p>\n      </div>\n    )\n  }\n}\n// 他言語化対応\nconst TetrisInformationPanel = withTranslation()(Panel)\n\nfunction Square (props) {\n  return (\n    <td className={`block-type-${props.name}`} />\n  )\n}\n\n// 次のブロックを表示する為のtableクラス\nclass Table extends React.Component {\n  renderSquare (i) {\n    const table = Array(16).fill(null)\n    return <Square key={`table${i}`} name={table[i]} />\n  }\n\n  render () {\n    const nextX = 2\n    const nextY = 4\n    const tbody = []\n    const templateblocks = blocktemplate(nextX, nextY, x, Array(5).fill(null))\n    const blocks = this.props.color ? templateblocks.filter(f => f.color === this.props.color) : [{ figures: [-1] }]\n    const figures = blocks[0].figures\n    for (let i = 0; i < nextX; i++) {\n      const row = []\n      for (let j = 0; j < nextY; j++) {\n        const num = i * 4 + j\n        figures.includes(num)\n          ? row.push(<td key={`table-td ${num}`} className={`block-type-${this.props.color}`} />)\n          : row.push(this.renderSquare(num))\n      }\n      tbody.push(<tr key={`table-tr ${i}`} className='table-row'>{row}</tr>)\n    }\n\n    return (\n      <table className='board-table'>\n        <tbody>\n          {tbody}\n        </tbody>\n      </table>\n    )\n  }\n}\n\n// 盤面\nclass Board extends React.Component {\n  renderSquare (i) {\n    return <Square key={`board${i}`} name={this.props.board[i]} />\n  }\n\n  render () {\n    const tbody = []\n    for (let i = 2; i < y; i++) {\n      const row = []\n      for (let j = 0; j < x; j++) {\n        const num = i * x + j\n        if (num % x === 0 || num % x === x - 1) {\n          row.push(<td key={`board-td${num}`} className='block-type-wall' />)\n        } else if (this.props.figures.includes(num)) {\n          row.push(<td key={`board-td${num}`} className={`block-type-${this.props.color}`} />)\n        } else {\n          row.push(this.renderSquare(num))\n        }\n      }\n      tbody.push(<tr key={`board-tr${i}`} className='table-row'>{row}</tr>)\n    }\n\n    return (\n      <table className='board-table'>\n        <tbody>\n          {tbody}\n        </tbody>\n      </table>\n    )\n  }\n}\n\nclass Tetris extends React.Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      currentBlock: { // 今のブロック\n        figures: [], // スタート座標\n        color: 'next', // 色\n        angle: null\n      },\n      nextBlock: this.cleateblock(),\n      histories: [{ // 履歴\n        board: Array(maxNum).fill(null)\n      }],\n      score: 0,\n      level: 0,\n      message: '',\n      judge: '',\n      language: ''\n    }\n    this.initialState = this.state\n    // キー操作が行われた時\n    window.onkeydown = (e) => {\n      if (this.state.currentBlock == null) {\n        return\n      }\n\n      if (e.key === 'ArrowLeft') {\n        this.moveLeft()\n      } else if (e.key === 'ArrowUp') {\n        this.rotate()\n      } else if (e.key === 'ArrowRight') {\n        this.moveRight()\n      } else if (e.key === 'ArrowDown') {\n        this.fallblock(false)\n      }\n    }\n  }\n\n  // 回転させる\n  rotate () {\n    const history = this.state.histories\n    const current = history[history.length - 1]\n    const board = current.board\n    const figures = this.state.currentBlock.figures.slice(0)\n    const rotatedFigures = []\n    const color = this.state.currentBlock.color\n    const angle = this.state.currentBlock.angle\n    const rotatedAngle = (angle !== 270) ? (angle + 90) : 0\n\n    if (color === 'lightblue') {\n      if (angle === 0 || angle === 180) {\n        rotatedFigures.push(blocktemplate(middleX, x, figures)[0].rotatedFigures[0])\n      } else if (angle === 90 || angle === 270) {\n        rotatedFigures.push(blocktemplate(middleX, x, figures)[0].rotatedFigures[1])\n      } else {\n        return\n      }\n    } else if (color === 'green') {\n      if (angle === 0 || angle === 180) {\n        rotatedFigures.push(blocktemplate(middleX, x, figures)[2].rotatedFigures[0])\n      } else if (angle === 90 || angle === 270) {\n        rotatedFigures.push(blocktemplate(middleX, x, figures)[2].rotatedFigures[1])\n      } else {\n        return\n      }\n    } else if (color === 'red') {\n      if (angle === 0 || angle === 180) {\n        rotatedFigures.push(blocktemplate(middleX, x, figures)[3].rotatedFigures[0])\n      } else if (angle === 90 || angle === 270) {\n        rotatedFigures.push(blocktemplate(middleX, x, figures)[3].rotatedFigures[1])\n      } else {\n        return\n      }\n    } else if (color === 'blue') {\n      if (angle === 0) {\n        rotatedFigures.push(blocktemplate(middleX, x, figures)[4].rotatedFigures[0])\n      } else if (angle === 90) {\n        rotatedFigures.push(blocktemplate(middleX, x, figures)[4].rotatedFigures[1])\n      } else if (angle === 180) {\n        rotatedFigures.push(blocktemplate(middleX, x, figures)[4].rotatedFigures[2])\n      } else if (angle === 270) {\n        rotatedFigures.push(blocktemplate(middleX, x, figures)[4].rotatedFigures[3])\n      }\n    } else if (color === 'orange') {\n      if (angle === 0) {\n        rotatedFigures.push(blocktemplate(middleX, x, figures)[5].rotatedFigures[0])\n      } else if (angle === 90) {\n        rotatedFigures.push(blocktemplate(middleX, x, figures)[5].rotatedFigures[1])\n      } else if (angle === 180) {\n        rotatedFigures.push(blocktemplate(middleX, x, figures)[5].rotatedFigures[2])\n      } else if (angle === 270) {\n        rotatedFigures.push(blocktemplate(middleX, x, figures)[5].rotatedFigures[3])\n      }\n    } else if (color === 'purple') {\n      if (angle === 0) {\n        rotatedFigures.push(blocktemplate(middleX, x, figures)[6].rotatedFigures[0])\n      } else if (angle === 90) {\n        rotatedFigures.push(blocktemplate(middleX, x, figures)[6].rotatedFigures[1])\n      } else if (angle === 180) {\n        rotatedFigures.push(blocktemplate(middleX, x, figures)[6].rotatedFigures[2])\n      } else if (angle === 270) {\n        rotatedFigures.push(blocktemplate(middleX, x, figures)[6].rotatedFigures[3])\n      }\n    } else {\n      return\n    }\n\n    // 回転できる場所にいるときは、回転した配列を、回転できない場所にいるときはretun\n    if (rotatedFigures[0].find(f => f % x === 0 || f % x === x - 1)) {\n      return null\n    } else if (rotatedFigures[0].find(f => board[f - 1] !== null)) {\n      return null\n    } else {\n      this.setState({\n        currentBlock: {\n          figures: rotatedFigures[0],\n          color: color,\n          angle: rotatedAngle\n        }\n      })\n    }\n  }\n\n  moveLeft () {\n    const history = this.state.histories\n    const current = history[history.length - 1]\n    const board = current.board\n    const figures = this.state.currentBlock.figures.slice(0)\n    // 左が壁の場合は、return\n    if (figures.find(f => f % x === 1)) {\n      return\n    }\n    // 既に色がついているブロックがある場合は固定。\n    if (figures.find(f => board[f - 1] !== null)) {\n      return null\n    } else {\n      // 通常時は左にズラすのみ。\n      this.setState({\n        currentBlock: {\n          figures: figures.map(m => m - 1),\n          color: this.state.currentBlock.color,\n          angle: this.state.currentBlock.angle\n        }\n      })\n    }\n  }\n\n  moveRight () {\n    const history = this.state.histories\n    const current = history[history.length - 1]\n    const board = current.board\n    const figures = this.state.currentBlock.figures.slice(0)\n    // 右が壁の場合は、return\n    if (figures.find(f => f % x === x - 2)) {\n      return\n    }\n    // 既に色がついているブロックがある場合は固定。\n    if (figures.find(f => board[f + 1] !== null)) {\n      return null\n    } else {\n      // 通常時は左にズラすのみ。\n      this.setState({\n        currentBlock: {\n          figures: figures.map(m => m + 1),\n          color: this.state.currentBlock.color,\n          angle: this.state.currentBlock.angle\n        }\n      })\n    }\n  }\n\n  // 落とす関数（y軸をズラす）\n  needFix () {\n    const history = this.state.histories\n    const current = history[history.length - 1]\n    const board = current.board\n    const figures = this.state.currentBlock.figures\n\n    // 任意のブロック配列に対して、ブロックにおける最下層のFix判定用配列を作成。\n    const filteredBottomFigure = figures.filter(f => figures.find(figure => figure === f + x))\n    const JudgeBottomFigure = figures.filter(f => filteredBottomFigure.indexOf(f) === -1)\n\n    // Fix対象がある場合は返り値を用意する\n    return JudgeBottomFigure.find(f => maxNum < f + x) || JudgeBottomFigure.find(f => board[f + x] !== null)\n  }\n\n  fallblock (fromMouse = true) {\n    const figures = this.state.currentBlock.figures\n    if (this.needFix()) {\n      // クリックに操作の場合\n      if (fromMouse) {\n        return\n      }\n      const minY = Math.floor(Math.min(...figures) / x)\n      const maxY = Math.floor(Math.max(...figures) / x)\n      this.fixblock()\n      this.deleteLine(minY, maxY)\n      this.setState({\n        histories: this.state.histories,\n        currentBlock: {\n          figures: [],\n          color: 'next',\n          angle: 0\n        }\n      })\n    } else {\n      this.setState({\n        currentBlock: {\n          figures: figures.map((figure) => figure + x),\n          color: this.state.currentBlock.color,\n          angle: this.state.currentBlock.angle\n        }\n      })\n    }\n  }\n\n  fixblock () {\n    const history = this.state.histories\n    const current = history[history.length - 1]\n    const boardcopy = current.board.slice()\n    const color = this.state.currentBlock.color\n\n    this.state.currentBlock.figures.forEach(f => {\n      boardcopy[f] = color\n    })\n    this.setState({\n      histories: history.concat([{\n        board: boardcopy\n      }])\n    })\n  }\n\n  // 空白行を削除して点数加算\n  delete () {\n    const history = this.state.histories\n    const copyboard = history[history.length - 1].board.slice(0)\n    let LineConter = 0\n\n    for (let i = 0; i < y; i++) {\n      if (copyboard[x * i] === 'delete') {\n        copyboard.splice(x * i, x)\n        LineConter++\n        [...Array(x)].map(() => copyboard.splice(1, 0, null))\n      }\n    }\n\n    this.setState({\n      histories: history.concat([{\n        board: copyboard\n      }]),\n      score: this.state.score + LineConter * 100 * (LineConter * 1)\n    })\n  }\n\n  // この関数は着色ラインを消すことのみを目的とする。\n  deleteLine (minY, maxY) {\n    const history = this.state.histories\n    const current = history[history.length - 1]\n    const copyhistories = this.state.histories.slice(0, history.length - 1)\n    const board = current.board\n    const copyboard = board.slice(0)\n\n    // 削除されるべきラインを全て”Null”にする\n    for (let i = minY; i <= maxY; i++) {\n      const Line = copyboard.slice(1 + x * i, x * (i + 1) - 1)\n      if (!Line.some(f => f === null)) {\n        copyboard.fill(null, x * i, x * (i + 1))\n        copyboard[x * i] = 'delete' // 盤面外の最左列を”delete”対象として判定する。\n      }\n    }\n    copyhistories.push({ board: copyboard })\n    this.setState({\n      histories: copyhistories\n    })\n  }\n\n  getRandomBlock () {\n    return Math.floor(Math.random() * 7)\n  }\n\n  cleateblock () {\n    const blocks = blocktemplate(middleX, x, Array(5).fill(null))\n    return blocks[this.getRandomBlock()]\n  }\n\n  changeInfo (level, message, judge, timeId, time) {\n    clearTimeout(timeId)\n    if (time !== null) {\n      timeId = setTimeout(this.mainloop.bind(this), time)\n    }\n    this.setState({\n      level: level,\n      message: message,\n      judge: judge\n    })\n  }\n\n  mainloop () {\n    const history = this.state.histories\n    const current = history[history.length - 1]\n    const board = current.board\n    const nextBlock = this.state.nextBlock.figures\n    const level = this.state.level\n    const { t } = this.props\n    if (board.includes('delete')) {\n      this.delete()\n    }\n    const timeId = setTimeout(this.mainloop.bind(this), 1000)\n\n    // ブロックを作成する（For creating blocks）\n    if (this.state.currentBlock.color === 'next') {\n      this.setState({\n        currentBlock: this.state.nextBlock,\n        nextBlock: this.cleateblock()\n      })\n    }\n\n    // 次のブロックが出現する場所に、1個でも色があったら、ゲームオーバー\n    if (nextBlock.find(f => board[f] !== null)) {\n      this.state.score >= 5000\n        ? this.changeInfo(level, t('5000点以上とるとわ。。。 いっぱい遊んで、くれたんやな、、、ありがとう！！！完敗や'), t('あなたの勝ち'), timeId, null)\n        : this.changeInfo(level, t('がははは、100年早いわ！出直してきんしゃい！'), t('あなたの負け'), timeId, null)\n    } else {\n      if (this.state.score < 100) {\n        this.changeInfo(level, t('さて、お手並み拝見させて貰おうか'), '', timeId, 1000)\n      } else if (this.state.score < 1000) {\n        this.changeInfo(2, t('ほほう！やり方は、知っているみたいだな。それじゃ行くぞ'), '', timeId, 500)\n      } else if (this.state.score < 1700) {\n        this.changeInfo(3, t('むむむ、なかなかうまいな'), '', timeId, 350)\n      } else if (this.state.score < 3500) {\n        this.changeInfo(4, t('ま、ま、まだ大丈夫だ'), '', timeId, 200)\n      } else if (this.state.score < 4500) {\n        this.changeInfo('MAX', t('こ、このままだと、負けてしまう。。あれを準備しよう。。。'), '', timeId, 150)\n      } else {\n        this.changeInfo(t('奥義発動'), t('勝たせない！'), '', timeId, 10)\n      }\n    }\n    this.fallblock(false)\n  }\n\n  // i18nextのAPIでブラウザの言語を習得して判別しているが、対応していない言語は全て英語にする関数を実行する\n  checkLanguage () {\n    const language = this.state.language\n    const { i18n } = this.props\n    if (language === '') {\n      window.navigator.language === 'ja' ? i18n.changeLanguage('ja') : i18n.changeLanguage('en')\n      this.setState({\n        language: 'SETED'\n      })\n    }\n  }\n\n  startGame () {\n    this.checkLanguage()\n    this.mainloop()\n  }\n\n  resetGame () {\n    if (this.state.judge !== '') {\n      setTimeout(this.mainloop.bind(this), 1000)\n    }\n    this.setState(this.initialState)\n  }\n\n  componentDidMount () {\n    this.startGame()\n  }\n\n  render () {\n    const history = this.state.histories\n    const current = history[history.length - 1]\n    const { t, i18n } = this.props\n\n    return (\n      <div className='wrapper-container'>\n        <div className='tetris'>\n          <div className='title'>\n            <h1>{t('最難テトリス ”ナカヤマン” Ver3.0')}</h1>\n            <p className='explain'>{t('スコア5000点以上とって、ナカヤマンをぶっ倒せ！！！')}</p>\n            <div className='button'>\n              <button type='button' className='changeLanguage' onClick={() => { i18n.changeLanguage('ja') }}>日本語</button>\n              <button type='button' className='changeLanguage' onClick={() => { i18n.changeLanguage('en') }}>English</button>\n            </div>\n          </div>\n          <div className='tetris-container'>\n            <Board\n              board={current.board}\n              color={this.state.currentBlock.color}\n              figures={this.state.currentBlock.figures}\n            />\n            <div className='tetris-panel-container'>\n              <div className='information'>\n                <div className='tetris-nextBlock'>\n                  <p>{t('次のブロック')}:</p>\n                  <Table\n                    color={this.state.nextBlock.color}\n                  />\n                </div>\n                <div className='score-message'>\n                  <TetrisInformationPanel\n                    score={this.state.score}\n                    level={this.state.level}\n                    message={this.state.message}\n                    judge={this.state.judge}\n                  />\n                </div>\n              </div>\n              <div className='tetris-panel-container-padding' />\n              <div className='btn-wrap'>\n                <button className='btn btn-reset' id='reset' type='button' onMouseDown={this.resetGame.bind(this)}>{t('リセット')}</button>\n              </div>\n              <table className='tetris-button-panel'>\n                <tbody>\n                  <tr>\n                    <td />\n                    <td id='tetris-rotate-button' className='tetris-button' onMouseDown={this.rotate.bind(this)}>↻</td>\n                    <td />\n                  </tr>\n                  <tr>\n                    <td id='tetris-move-left-button' className='tetris-button' onMouseDown={this.moveLeft.bind(this)}>←</td>\n                    <td id='tetris-fall-button' className='tetris-button' onMouseDown={this.fallblock.bind(this)}>↓</td>\n                    <td id='tetris-move-right-button' className='tetris-button' onMouseDown={this.moveRight.bind(this)}>→</td>\n                  </tr>\n                </tbody>\n              </table>\n            </div>\n          </div>\n        </div>\n        <Paypal />\n      </div>\n    )\n  }\n}\n\nexport default withTranslation()(Tetris)\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport 'ress'\nimport './index.css'\nimport GA4React from 'ga-4-react'\nimport Tetris from './Tetris'\n\nconst ga4react = new GA4React('G-GB64VYNVM1');\n(async () => {\n  await ga4react.initialize()\n  ReactDOM.render(\n    <React.StrictMode>\n      <Tetris />\n    </React.StrictMode>,\n    document.getElementById('root')\n  )\n})()\n"],"sourceRoot":""}