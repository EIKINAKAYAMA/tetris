{"version":3,"sources":["i18n.js","Tetris.js","index.js"],"names":["resources","en","translation","enTranslation","ja","jaTranslation","i18n","use","initReactI18next","init","lng","fallbackLng","debug","interpolation","escapeValue","react","wait","x","middleX","Math","floor","blocktemplate","thisFigures","figures","color","angle","rotatedFigures","Panel","t","this","props","score","level","message","judge","React","Component","TetrisInformationPanel","withTranslation","Square","className","name","Table","i","table","Array","fill","tbody","templateblocks","filter","f","row","j","num","includes","push","renderSquare","Board","board","Tetris","state","currentBlock","nextBlock","cleateblock","histories","language","window","onkeydown","e","key","moveLeft","rotate","moveRight","fallblock","history","length","slice","rotatedAngle","console","log","find","setState","map","m","filteredBottomFigure","figure","JudgeBottomFigure","indexOf","fromMouse","needFix","minY","min","maxY","max","fixblock","deleteLine","boardcopy","forEach","concat","copyboard","LineConter","splice","current","copyhistories","some","random","getRandomBlock","timeId","time","clearTimeout","setTimeout","mainloop","bind","delete","changeInfo","navigator","changeLanguage","checkLanguage","startGame","type","onClick","id","onMouseDown","ga4react","GA4React","a","initialize","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c6da45d6.chunk.js","sourcesContent":["import i18n from 'i18next'\nimport enTranslation from './locales/en.json'\nimport jaTranslation from './locales/ja.json'\nimport { initReactI18next } from 'react-i18next'\n\nconst resources = {\n  en: {\n    translation: enTranslation\n  },\n  ja: {\n    translation: jaTranslation\n  }\n}\n\ni18n.use(initReactI18next)\n  .init({\n    lng: 'en',\n    fallbackLng: 'en',\n    debug: true,\n    interpolation: { escapeValue: false },\n    react: { wait: true },\n    resources: resources\n  })\n\nexport default i18n\n","import React from 'react'\nimport './i18n'\nimport { withTranslation } from 'react-i18next'\n\nconst x = 12 // x=（実際に表示させたい数）＋２（左右の隠し分）\nconst y = 22 // y=（実際に表示させたい数）＋２（最上位列の隠し分）\nconst maxNum = x * y\nconst middleX = Math.floor(x / 2)\n\n// テトリミノの設定用関数\nfunction blocktemplate (middleX, x, thisFigures) {\n  const blocks =\n  [\n    {\n      figures: [middleX - 2, middleX - 1, middleX, middleX + 1],\n      color: 'lightblue',\n      angle: 0,\n      rotatedFigures: [\n        [thisFigures[0] - 2 * x + 2, thisFigures[1] - x + 1, thisFigures[2], thisFigures[3] + x - 1],\n        [thisFigures[0] + 2 * x - 2, thisFigures[1] + x - 1, thisFigures[2], thisFigures[3] - x + 1]\n      ]\n    },\n    {\n      figures: [middleX - 1, middleX, middleX + x - 1, middleX + x],\n      color: 'yellow',\n      angle: 0\n      // 正方形の為、回転しない\n    },\n    {\n      figures: [middleX, middleX + 1, middleX - 1 + x, middleX + x],\n      color: 'green',\n      angle: 0,\n      rotatedFigures: [\n        [thisFigures[0] + x, thisFigures[1] + 2 * x - 1, thisFigures[2] - x, thisFigures[3] - 1],\n        [thisFigures[0] - x, thisFigures[1] - 2 * x + 1, thisFigures[2] + x, thisFigures[3] + 1]\n      ]\n    },\n    {\n      figures: [middleX - 1, middleX, middleX + x, middleX + x + 1],\n      color: 'red',\n      angle: 0,\n      rotatedFigures: [\n        [thisFigures[0] + 2, thisFigures[1] + x + 1, thisFigures[2], thisFigures[3] + x - 1],\n        [thisFigures[0] - 2, thisFigures[1] - x - 1, thisFigures[2], thisFigures[3] - x + 1]\n      ]\n    },\n    {\n      figures: [middleX - 1, middleX + x - 1, middleX + x, middleX + x + 1],\n      color: 'blue',\n      angle: 0,\n      rotatedFigures: [\n        [thisFigures[0] + 2, thisFigures[1] - x + 1, thisFigures[2], thisFigures[3] + x - 1],\n        [thisFigures[0] + 2 * x, thisFigures[1] + x + 1, thisFigures[2], thisFigures[3] - x - 1],\n        [thisFigures[0] - 2, thisFigures[1] + x - 1, thisFigures[2], thisFigures[3] - x + 1],\n        [thisFigures[0] - 2 * x, thisFigures[1] - x - 1, thisFigures[2], thisFigures[3] + x + 1]\n      ]\n    },\n    {\n      figures: [middleX + 1, middleX + x - 1, middleX + x, middleX + x + 1],\n      color: 'orange',\n      angle: 0,\n      rotatedFigures: [\n        [thisFigures[0] + 2 * x, thisFigures[1] - x + 1, thisFigures[2], thisFigures[3] + x - 1],\n        [thisFigures[0] - 2, thisFigures[1] + x + 1, thisFigures[2], thisFigures[3] - x - 1],\n        [thisFigures[0] - 2 * x, thisFigures[1] + x - 1, thisFigures[2], thisFigures[3] - x + 1],\n        [thisFigures[0] + 2, thisFigures[1] - x - 1, thisFigures[2], thisFigures[3] + x + 1]\n      ]\n    },\n    {\n      figures: [middleX, middleX + x - 1, middleX + x, middleX + x + 1],\n      color: 'purple',\n      angle: 0,\n      rotatedFigures: [\n        [thisFigures[0] + x + 1, thisFigures[1] - x + 1, thisFigures[2], thisFigures[3] + x - 1],\n        [thisFigures[0] + x - 1, thisFigures[1] + x + 1, thisFigures[2], thisFigures[3] - x - 1],\n        [thisFigures[0] - x - 1, thisFigures[1] + x - 1, thisFigures[2], thisFigures[3] - x + 1],\n        [thisFigures[0] - x + 1, thisFigures[1] - x - 1, thisFigures[2], thisFigures[3] + x + 1]\n      ]\n    }\n  ]\n  return blocks\n  // const blocks = blocks_without_angle.map(f => {f.angle = 0 return f})\n  // const blocks = blocks_without_angle.map(f =>  ({...f , angle : 0}))\n}\n\nclass Panel extends React.Component {\n  render () {\n    const { t } = this.props\n\n    return (\n      <div>\n        <p>{t('スコア')}&nbsp;&nbsp;:&nbsp;&nbsp;{this.props.score}</p>\n        <p>{t('レベル')}&nbsp;&nbsp;:&nbsp;&nbsp;{this.props.level}</p>\n        <br />\n        <p>{t('ナカヤマン')}：<br />{this.props.message}</p>\n        <br />\n        <p>{t('勝利判定')}：{this.props.judge}</p>\n      </div>\n    )\n  }\n}\n// 他言語化対応\nconst TetrisInformationPanel = withTranslation()(Panel)\n\nfunction Square (props) {\n  return (\n    <td className={`block-type-${props.name}`} />\n  )\n}\n\n// 次のブロックを表示する為のtableクラス\nclass Table extends React.Component {\n  renderSquare (i) {\n    const table = Array(16).fill(null)\n    return <Square key={`table${i}`} name={table[i]} />\n  }\n\n  render () {\n    const nextX = 2\n    const nextY = 4\n    const tbody = []\n    const templateblocks = blocktemplate(nextX, nextY, x, Array(5).fill(null))\n    const blocks = this.props.color ? templateblocks.filter(f => f.color === this.props.color) : [{ figures: [-1] }]\n    const figures = blocks[0].figures\n    for (let i = 0; i < nextX; i++) {\n      const row = []\n      for (let j = 0; j < nextY; j++) {\n        const num = i * 4 + j\n        figures.includes(num)\n          ? row.push(<td key={`table-td ${num}`} className={`block-type-${this.props.color}`} />)\n          : row.push(this.renderSquare(num))\n      }\n      tbody.push(<tr key={`table-tr ${i}`} className='table-row'>{row}</tr>)\n    }\n\n    return (\n      <table className='board-table'>\n        <tbody>\n          {tbody}\n        </tbody>\n      </table>\n    )\n  }\n}\n\n// 盤面\nclass Board extends React.Component {\n  renderSquare (i) {\n    return <Square key={`board${i}`} name={this.props.board[i]} />\n  }\n\n  render () {\n    const tbody = []\n    for (let i = 2; i < y; i++) {\n      const row = []\n      for (let j = 0; j < x; j++) {\n        const num = i * x + j\n        if (num % x === 0 || num % x === x - 1) {\n          row.push(<td key={`board-td${num}`} className='block-type-wall' />)\n        } else if (this.props.figures.includes(num)) {\n          row.push(<td key={`board-td${num}`} className={`block-type-${this.props.color}`} />)\n        } else {\n          row.push(this.renderSquare(num))\n        }\n      }\n      tbody.push(<tr key={`board-tr${i}`} className='table-row'>{row}</tr>)\n    }\n\n    return (\n      <table className='board-table'>\n        <tbody>\n          {tbody}\n        </tbody>\n      </table>\n    )\n  }\n}\n\nclass Tetris extends React.Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      currentBlock: { // 今のブロック\n        figures: [], // スタート座標\n        color: 'next', // 色\n        angle: null\n      },\n      nextBlock: this.cleateblock(),\n      histories: [{ // 履歴\n        board: Array(maxNum).fill(null)\n      }],\n      score: 0,\n      level: 0,\n      message: '',\n      judge: '',\n      language: ''\n    }\n    // キー操作が行われた時\n    window.onkeydown = (e) => {\n      if (this.state.currentBlock == null) {\n        return\n      }\n\n      if (e.key === 'ArrowLeft') {\n        this.moveLeft()\n      } else if (e.key === 'ArrowUp') {\n        this.rotate()\n      } else if (e.key === 'ArrowRight') {\n        this.moveRight()\n      } else if (e.key === 'ArrowDown') {\n        this.fallblock(false)\n      }\n    }\n  }\n\n  // 回転させる\n  rotate () {\n    const history = this.state.histories\n    const current = history[history.length - 1]\n    const board = current.board\n    const figures = this.state.currentBlock.figures.slice(0)\n    const rotatedFigures = []\n    const color = this.state.currentBlock.color\n    const angle = this.state.currentBlock.angle\n    const rotatedAngle = (angle !== 270) ? (angle + 90) : 0\n\n    if (color === 'lightblue') {\n      if (angle === 0 || angle === 180) {\n        rotatedFigures.push(blocktemplate(middleX, x, figures)[0].rotatedFigures[0])\n      } else if (angle === 90 || angle === 270) {\n        rotatedFigures.push(blocktemplate(middleX, x, figures)[0].rotatedFigures[1])\n      } else {\n        return\n      }\n    } else if (color === 'green') {\n      if (angle === 0 || angle === 180) {\n        console.log(figures)\n        rotatedFigures.push(blocktemplate(middleX, x, figures)[2].rotatedFigures[0])\n        console.log(rotatedFigures)\n      } else if (angle === 90 || angle === 270) {\n        rotatedFigures.push(blocktemplate(middleX, x, figures)[2].rotatedFigures[1])\n      } else {\n        return\n      }\n    } else if (color === 'red') {\n      if (angle === 0 || angle === 180) {\n        rotatedFigures.push(blocktemplate(middleX, x, figures)[3].rotatedFigures[0])\n      } else if (angle === 90 || angle === 270) {\n        rotatedFigures.push(blocktemplate(middleX, x, figures)[3].rotatedFigures[1])\n      } else {\n        return\n      }\n    } else if (color === 'blue') {\n      if (angle === 0) {\n        rotatedFigures.push(blocktemplate(middleX, x, figures)[4].rotatedFigures[0])\n      } else if (angle === 90) {\n        rotatedFigures.push(blocktemplate(middleX, x, figures)[4].rotatedFigures[1])\n      } else if (angle === 180) {\n        rotatedFigures.push(blocktemplate(middleX, x, figures)[4].rotatedFigures[2])\n      } else if (angle === 270) {\n        rotatedFigures.push(blocktemplate(middleX, x, figures)[4].rotatedFigures[3])\n      }\n    } else if (color === 'orange') {\n      if (angle === 0) {\n        rotatedFigures.push(blocktemplate(middleX, x, figures)[5].rotatedFigures[0])\n      } else if (angle === 90) {\n        rotatedFigures.push(blocktemplate(middleX, x, figures)[5].rotatedFigures[1])\n      } else if (angle === 180) {\n        rotatedFigures.push(blocktemplate(middleX, x, figures)[5].rotatedFigures[2])\n      } else if (angle === 270) {\n        rotatedFigures.push(blocktemplate(middleX, x, figures)[5].rotatedFigures[3])\n      }\n    } else if (color === 'purple') {\n      if (angle === 0) {\n        rotatedFigures.push(blocktemplate(middleX, x, figures)[6].rotatedFigures[0])\n      } else if (angle === 90) {\n        rotatedFigures.push(blocktemplate(middleX, x, figures)[6].rotatedFigures[1])\n      } else if (angle === 180) {\n        rotatedFigures.push(blocktemplate(middleX, x, figures)[6].rotatedFigures[2])\n      } else if (angle === 270) {\n        rotatedFigures.push(blocktemplate(middleX, x, figures)[6].rotatedFigures[3])\n      }\n    } else {\n      return\n    }\n\n    // 回転できる場所にいるときは、回転した配列を、回転できない場所にいるときはretun\n    if (rotatedFigures[0].find(f => f % x === 0 || f % x === x - 1)) {\n      return null\n    } else if (rotatedFigures[0].find(f => board[f - 1] !== null)) {\n      return null\n    } else {\n      this.setState({\n        currentBlock: {\n          figures: rotatedFigures[0],\n          color: color,\n          angle: rotatedAngle\n        }\n      })\n    }\n  }\n\n  moveLeft () {\n    const history = this.state.histories\n    const current = history[history.length - 1]\n    const board = current.board\n    const figures = this.state.currentBlock.figures.slice(0)\n    // 左が壁の場合は、return\n    if (figures.find(f => f % x === 1)) {\n      return\n    }\n    // 既に色がついているブロックがある場合は固定。\n    if (figures.find(f => board[f - 1] !== null)) {\n      return null\n    } else {\n      // 通常時は左にズラすのみ。\n      this.setState({\n        currentBlock: {\n          figures: figures.map(m => m - 1),\n          color: this.state.currentBlock.color,\n          angle: this.state.currentBlock.angle\n        }\n      })\n    }\n  }\n\n  moveRight () {\n    const history = this.state.histories\n    const current = history[history.length - 1]\n    const board = current.board\n    const figures = this.state.currentBlock.figures.slice(0)\n    // 右が壁の場合は、return\n    if (figures.find(f => f % x === x - 2)) {\n      return\n    }\n    // 既に色がついているブロックがある場合は固定。\n    if (figures.find(f => board[f + 1] !== null)) {\n      return null\n    } else {\n      // 通常時は左にズラすのみ。\n      this.setState({\n        currentBlock: {\n          figures: figures.map(m => m + 1),\n          color: this.state.currentBlock.color,\n          angle: this.state.currentBlock.angle\n        }\n      })\n    }\n  }\n\n  // 落とす関数（y軸をズラす）\n  needFix () {\n    const history = this.state.histories\n    const current = history[history.length - 1]\n    const board = current.board\n    const figures = this.state.currentBlock.figures\n\n    // 任意のブロック配列に対して、ブロックにおける最下層のFix判定用配列を作成。\n    const filteredBottomFigure = figures.filter(f => figures.find(figure => figure === f + x))\n    const JudgeBottomFigure = figures.filter(f => filteredBottomFigure.indexOf(f) === -1)\n\n    // Fix対象がある場合は返り値を用意する\n    return JudgeBottomFigure.find(f => maxNum < f + x) || JudgeBottomFigure.find(f => board[f + x] !== null)\n  }\n\n  fallblock (fromMouse = true) {\n    const figures = this.state.currentBlock.figures\n    if (this.needFix()) {\n      // クリックに操作の場合\n      if (fromMouse) {\n        return\n      }\n      const minY = Math.floor(Math.min(...figures) / x)\n      const maxY = Math.floor(Math.max(...figures) / x)\n      this.fixblock()\n      this.deleteLine(minY, maxY)\n      this.setState({\n        histories: this.state.histories,\n        currentBlock: {\n          figures: [],\n          color: 'next',\n          angle: 0\n        }\n      })\n    } else {\n      this.setState({\n        currentBlock: {\n          figures: figures.map((figure) => figure + x),\n          color: this.state.currentBlock.color,\n          angle: this.state.currentBlock.angle\n        }\n      })\n    }\n  }\n\n  fixblock () {\n    const history = this.state.histories\n    const current = history[history.length - 1]\n    const boardcopy = current.board.slice()\n    const color = this.state.currentBlock.color\n\n    this.state.currentBlock.figures.forEach(f => {\n      boardcopy[f] = color\n    })\n    this.setState({\n      histories: history.concat([{\n        board: boardcopy\n      }])\n    })\n  }\n\n  // 空白行を削除して点数加算\n  delete () {\n    const history = this.state.histories\n    const copyboard = history[history.length - 1].board.slice(0)\n    let LineConter = 0\n\n    for (let i = 0; i < y; i++) {\n      if (copyboard[x * i] === 'delete') {\n        copyboard.splice(x * i, x)\n        LineConter++\n        [...Array(x)].map(() => copyboard.splice(1, 0, null))\n      }\n    }\n\n    this.setState({\n      histories: history.concat([{\n        board: copyboard\n      }]),\n      score: this.state.score + LineConter * 100 * (LineConter * 1)\n    })\n  }\n\n  // この関数は着色ラインを消すことのみを目的とする。\n  deleteLine (minY, maxY) {\n    const history = this.state.histories\n    const current = history[history.length - 1]\n    const copyhistories = this.state.histories.slice(0, history.length - 1)\n    const board = current.board\n    const copyboard = board.slice(0)\n\n    // 削除されるべきラインを全て”Null”にする\n    for (let i = minY; i <= maxY; i++) {\n      const Line = copyboard.slice(1 + x * i, x * (i + 1) - 1)\n      if (!Line.some(f => f === null)) {\n        copyboard.fill(null, x * i, x * (i + 1))\n        copyboard[x * i] = 'delete' // 盤面外の最左列を”delete”対象として判定する。\n      }\n    }\n    copyhistories.push({ board: copyboard })\n    this.setState({\n      histories: copyhistories\n    })\n  }\n\n  getRandomBlock () {\n    return Math.floor(Math.random() * 7)\n  }\n\n  cleateblock () {\n    const blocks = blocktemplate(middleX, x, Array(5).fill(null))\n    return blocks[this.getRandomBlock()]\n  }\n\n  changeInfo (level, message, judge, timeId, time) {\n    clearTimeout(timeId)\n    if (time !== null) {\n      timeId = setTimeout(this.mainloop.bind(this), time)\n    }\n    this.setState({\n      level: level,\n      message: message,\n      judge: judge\n    })\n  }\n\n  mainloop () {\n    const history = this.state.histories\n    const current = history[history.length - 1]\n    const board = current.board\n    const nextBlock = this.state.nextBlock.figures\n    const level = this.state.level\n    const { t } = this.props\n    if (board.includes('delete')) {\n      this.delete()\n    }\n    const timeId = setTimeout(this.mainloop.bind(this), 1000)\n\n    // ブロックを作成する（For creating blocks）\n    if (this.state.currentBlock.color === 'next') {\n      this.setState({\n        currentBlock: this.state.nextBlock,\n        nextBlock: this.cleateblock()\n      })\n    }\n\n    // 次のブロックが出現する場所に、1個でも色があったら、ゲームオーバー\n    if (nextBlock.find(f => board[f] !== null)) {\n      this.state.score >= 5000\n        ? this.changeInfo(level, t('5000点以上とるとわ。。。 いっぱい遊んで、くれたんやな、、、ありがとう！！！完敗や'), t('あなたの勝ち'), timeId, null)\n        : this.changeInfo(level, t('がははは、100年早いわ！出直してきんしゃい！'), t('あなたの負け'), timeId, null)\n    } else {\n      if (this.state.score < 100) {\n        this.changeInfo(level, t('さて、お手並み拝見させて貰おうか'), '', timeId, 1000)\n      } else if (this.state.score < 1000) {\n        this.changeInfo(2, t('ほほう！やり方は、知っているみたいだな。それじゃ行くぞ'), '', timeId, 500)\n      } else if (this.state.score < 1700) {\n        this.changeInfo(3, t('むむむ、なかなかうまいな'), '', timeId, 350)\n      } else if (this.state.score < 3500) {\n        this.changeInfo(4, t('ま、ま、まだ大丈夫だ'), '', timeId, 200)\n      } else if (this.state.score < 4500) {\n        this.changeInfo('MAX', t('こ、このままだと、負けてしまう。。あれを準備しよう。。。'), '', timeId, 150)\n      } else {\n        this.changeInfo(t('奥義発動'), t('勝たせない！'), '', timeId, 10)\n      }\n    }\n    this.fallblock(false)\n  }\n\n  // i18nextのAPIでブラウザの言語を習得して判別しているが、対応していない言語は全て英語にする関数を実行する\n  checkLanguage () {\n    const language = this.state.language\n    const { i18n } = this.props\n    if (language === '') {\n      window.navigator.language === 'ja' ? i18n.changeLanguage('ja') : i18n.changeLanguage('en')\n      this.setState({\n        language: 'SETED'\n      })\n    }\n  }\n\n  startGame () {\n    this.checkLanguage()\n    this.mainloop()\n  }\n\n  componentDidMount () {\n    this.startGame()\n  }\n\n  render () {\n    const history = this.state.histories\n    const current = history[history.length - 1]\n    const { t, i18n } = this.props\n\n    return (\n      <div className='wrapper-container'>\n        <div className='tetris'>\n          <div className='title'>\n            <h1>{t('最難テトリス ”ナカヤマン” Ver2.0')}</h1>\n            <p className='explain'>{t('スコア5000点以上とって、ナカヤマンをぶっ倒せ！！！')}</p>\n          </div>\n          <div className='button'>\n            <button type='button' className='changeLanguage' onClick={() => { i18n.changeLanguage('ja') }}>日本語</button>\n            <button type='button' className='changeLanguage' onClick={() => { i18n.changeLanguage('en') }}>English</button>\n          </div>\n          <div className='tetris-container'>\n            <Board\n              board={current.board}\n              color={this.state.currentBlock.color}\n              figures={this.state.currentBlock.figures}\n            />\n            <div className='tetris-panel-container'>\n              <div className='information'>\n                <div className='tetris-nextBlock'>\n                  <p>{t('次のブロック')}:</p>\n                  <Table\n                    color={this.state.nextBlock.color}\n                  />\n                </div>\n                <div className='score-message'>\n                  <TetrisInformationPanel\n                    score={this.state.score}\n                    level={this.state.level}\n                    message={this.state.message}\n                    judge={this.state.judge}\n                  />\n                </div>\n              </div>\n              <div className='tetris-panel-container-padding' />\n              <table className='tetris-button-panel'>\n                <tbody>\n                  <tr>\n                    <td />\n                    <td id='tetris-rotate-button' className='tetris-button' onMouseDown={this.rotate.bind(this)}>↻</td>\n                    <td />\n                  </tr>\n                  <tr>\n                    <td id='tetris-move-left-button' className='tetris-button' onMouseDown={this.moveLeft.bind(this)}>←</td>\n                    <td id='tetris-fall-button' className='tetris-button' onMouseDown={this.fallblock.bind(this)}>↓</td>\n                    <td id='tetris-move-right-button' className='tetris-button' onMouseDown={this.moveRight.bind(this)}>→</td>\n                  </tr>\n                </tbody>\n              </table>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default withTranslation()(Tetris)\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport 'ress'\nimport './index.css'\nimport GA4React from 'ga-4-react'\nimport Tetris from './Tetris'\n\nconst ga4react = new GA4React('G-GB64VYNVM1');\n(async () => {\n  await ga4react.initialize()\n  ReactDOM.render(\n    <React.StrictMode>\n      <Tetris />\n    </React.StrictMode>,\n    document.getElementById('root')\n  )\n})()\n"],"sourceRoot":""}